#%%
# ===============================================================
# üß† PROJETO: MACHINE LEARNING APLICADO √Ä SA√öDE ‚Äî DIABETES
# ===============================================================
# 
# üéØ OBJETIVO GERAL:
# Desenvolver uma aplica√ß√£o em Python (com interface Streamlit)
# que utilize t√©cnicas de aprendizado supervisionado e n√£o supervisionado
# para analisar e modelar dados cl√≠nicos de pacientes com diabetes.
# 
# O foco est√° em compreender os fatores que influenciam
# a progress√£o da doen√ßa e identificar poss√≠veis grupos
# de pacientes com perfis semelhantes.
# 
# ---------------------------------------------------------------
# üìò CONTEXTO DO ESTUDO:
# O conjunto de dados utilizado √© o "Diabetes Dataset",
# dispon√≠vel na biblioteca scikit-learn (fun√ß√£o load_diabetes()).
# 
# Ele cont√©m informa√ß√µes cl√≠nicas padronizadas de 442 pacientes
# diagnosticados com diabetes. Cada registro inclui vari√°veis como:
# 
# - age: idade do paciente
# - sex: sexo (masculino ou feminino)
# - bmi: √≠ndice de massa corporal
# - bp: press√£o arterial m√©dia
# - s1 a s6: medidas s√©ricas (colesterol total, LDL, HDL, triglicer√≠deos, etc.)
# - target: medida quantitativa da progress√£o da doen√ßa ap√≥s 1 ano
# 
# ---------------------------------------------------------------
# üîç PROBLEMA A SER INVESTIGADO:
# Todos os pacientes da base j√° s√£o diab√©ticos.
# Portanto, o objetivo do estudo n√£o √© identificar quem tem ou n√£o diabetes,
# mas sim compreender os fatores que influenciam a progress√£o da doen√ßa.
# 
# A partir disso, o estudo busca responder perguntas como:
# - Quais vari√°veis est√£o mais associadas √† progress√£o do diabetes?
# - √â poss√≠vel prever o grau de progress√£o de um paciente?
# - Existem grupos distintos de pacientes com perfis cl√≠nicos semelhantes?
# 
# ---------------------------------------------------------------
# üìä AN√ÅLISE EXPLORAT√ìRIA (EDA):
# A etapa inicial consiste em explorar o comportamento das vari√°veis:
# 
# - Verificar distribui√ß√µes, correla√ß√µes e poss√≠veis padr√µes cl√≠nicos.
# - Identificar rela√ß√µes importantes, como a correla√ß√£o entre IMC (bmi)
#   e press√£o arterial (bp), que se mostraram positivas.
# - Avaliar se fatores como idade e sexo t√™m impacto significativo.
# 
# Resultados observados:
# - N√£o h√° valores ausentes ou inconsist√™ncias.
# - Vari√°veis mais correlacionadas √† progress√£o da doen√ßa: bmi e s5.
# - Sexo n√£o apresentou correla√ß√£o relevante, sendo mantido apenas
#   como dado demogr√°fico.
# - IMC elevado e press√£o arterial alta aparecem como principais
#   indicadores de piora na progress√£o do diabetes.
# 
# ---------------------------------------------------------------
# ü©∫ DEFINI√á√ÉO DO PROBLEMA DE MACHINE LEARNING:
# Com base na an√°lise dos dados, foram definidos tr√™s objetivos:

# 1. **Classifica√ß√£o (Aprendizado Supervisionado):**
#    - Classificar os pacientes entre ‚Äúbaixa progress√£o‚Äù e ‚Äúalta progress√£o‚Äù 
#      da doen√ßa com base nas vari√°veis cl√≠nicas.
# 
# 1. **Regress√£o (Aprendizado Supervisionado):**
#    - Predizer o grau de progress√£o da doen√ßa (target)
#      com base nas vari√°veis cl√≠nicas.
# 
# 2. **Clusteriza√ß√£o (Aprendizado N√£o Supervisionado):**
#    - Agrupar pacientes de acordo com semelhan√ßas cl√≠nicas,
#      identificando perfis de risco distintos.
# 
# 3. **Visualiza√ß√£o Interativa:**
#    - Criar uma interface intuitiva em Streamlit,
#      permitindo explorar os dados, visualizar gr√°ficos
#      e interpretar os resultados dos modelos.
# 
# ---------------------------------------------------------------
# üìà INSIGHTS INICIAIS:
# - O aumento do IMC e da press√£o arterial tende a elevar a progress√£o da doen√ßa.
# - A idade apresenta varia√ß√£o normal, mas n√£o influencia fortemente o target.
# - Sexo n√£o √© um fator determinante, apresentando correla√ß√£o pr√≥xima de zero.
# - Os grupos identificados via clusteriza√ß√£o podem ajudar a compreender
#   padr√µes de risco, apoiando decis√µes m√©dicas e preventivas.
# 
# ---------------------------------------------------------------
# üß© CONCLUS√ÉO:
# Este projeto demonstra como t√©cnicas de Machine Learning podem ser aplicadas
# para apoiar o diagn√≥stico e o acompanhamento de doen√ßas cr√¥nicas como o diabetes,
# permitindo identificar padr√µes cl√≠nicos e prever a progress√£o da condi√ß√£o
# com base em dados objetivos.
# 
# A abordagem serve como exemplo de como ci√™ncia de dados e sa√∫de
# podem se unir para gerar insights valiosos e contribuir para a medicina preventiva.
# ===============================================================


#%%
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
from sklearn.datasets import load_diabetes
from sklearn.model_selection import train_test_split, StratifiedKFold, cross_val_score, learning_curve, validation_curve, GridSearchCV
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.pipeline import Pipeline
from sklearn.metrics import (
    accuracy_score, precision_score, recall_score, f1_score, roc_auc_score,
    confusion_matrix, ConfusionMatrixDisplay, RocCurveDisplay, classification_report,
    mean_absolute_error, mean_squared_error, r2_score, silhouette_score
)
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestRegressor

from sklearn.cluster import KMeans
from sklearn.decomposition import PCA
from kneed import KneeLocator


# %%
diabetes = load_diabetes()
df = pd.DataFrame(diabetes.data, columns=diabetes.feature_names)

print("Formato do dataset:", df.shape)
print("\nColunas dispon√≠veis:", df.columns.to_list())

df.head()

# %%
# %%

print(diabetes.DESCR)

# %%
print(df.info())
print("\nValores ausentes por coluna:\n", df.isnull().sum())
df.describe().T
# %%
plt.figure(figsize=(12, 10))
df.hist(bins=20, figsize=(12, 10), color="#1f77b4", edgecolor="black")
plt.suptitle("Distribui√ß√£o das vari√°veis do dataset de Diabetes", fontsize=16)
plt.show()
# %%
# %%
plt.figure(figsize=(6, 4))
sns.scatterplot(x='bmi', y='bp', data=df, color="#2ca02c")
plt.title("Rela√ß√£o entre IMC e Press√£o Arterial")
plt.xlabel("√çndice de Massa Corporal (bmi)")
plt.ylabel("Press√£o Arterial (bp)")
plt.show()

# %%
plt.figure(figsize=(10, 8))
sns.heatmap(df.corr(), annot=True, cmap="coolwarm", fmt=".2f")
plt.title("Matriz de Correla√ß√£o entre as Vari√°veis")
plt.show()
# %%
plt.figure(figsize=(7, 4))
sns.histplot(df['age'], bins=30, kde=True, color="#1f77b4")
plt.title("Distribui√ß√£o da vari√°vel 'age' (idade normalizada)")
plt.xlabel("Idade (valor padronizado)")
plt.ylabel("Frequ√™ncia")
plt.show()
# %%
df['sexo_label'] = df['sex'].apply(lambda x: 'Masculino' if x > 0 else 'Feminino')
df[['sex', 'sexo_label']].head()
plt.figure(figsize=(6,4))
sns.countplot(x='sexo_label', data=df, palette="pastel")
plt.title("Distribui√ß√£o de Pacientes por Sexo")
plt.xlabel("Sexo")
plt.ylabel("Quantidade de Pacientes")
plt.show()

# %%
plt.figure(figsize=(7,5))
sns.boxplot(x='sexo_label', y='bmi', data=df, palette="Set2")
plt.title("Distribui√ß√£o do IMC (bmi) por Sexo")
plt.xlabel("Sexo")
plt.ylabel("√çndice de Massa Corporal (IMC)")
plt.show()

# %%
df['faixa_etaria'] = pd.cut(
    df['age'],
    bins=[-0.12, -0.06, 0.0, 0.06, 0.12],
    labels=['Jovens', 'Adultos Jovens', 'Adultos', 'Idosos']
)
plt.figure(figsize=(7,5))
sns.countplot(x='faixa_etaria', data=df, palette='crest')
plt.title("Distribui√ß√£o de Pacientes por Faixa Et√°ria", fontsize=14)
plt.xlabel("Faixa Et√°ria (estimada)")
plt.ylabel("Quantidade de Pacientes")
plt.show()
# %%
plt.figure(figsize=(8,5))
sns.countplot(x='faixa_etaria', hue='sexo_label', data=df, palette='Set2')
plt.title("Distribui√ß√£o de Pacientes por Faixa Et√°ria e Sexo", fontsize=14)
plt.xlabel("Faixa Et√°ria (estimada)")
plt.ylabel("Quantidade de Pacientes")
plt.legend(title="Sexo")
plt.show()

# %%
plt.figure(figsize=(6,4))
sns.boxplot(x='sexo_label', y='bmi', data=df, palette="Set2")
plt.title("Distribui√ß√£o do IMC por Sexo")
plt.show()

plt.figure(figsize=(6,4))
sns.boxplot(x='sexo_label', y=diabetes.target, data=df, palette="Set2")
plt.title("Progress√£o da Doen√ßa (target) por Sexo")
plt.show()
# %%
